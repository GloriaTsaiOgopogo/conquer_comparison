
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(config_file)
[1] "config/GSE45719.json"
> print(demethod)
[1] "DESeq2"
> 
> ## filt should be a string of the form type_value_nbr, where type is either TPM 
> ## or count, and features will be filtered out unless they show at least a 
> ## "type" of "value" in at least "nbr" samples (if nbr is a single number) or at
> ## least nbr % of the samples (if nbr ends with p). For now, both value and nbr
> ## need to be integers (no periods in the name).
> print(filt)
[1] "TPM_1_25p"
> (exts <- ifelse(filt == "", "", paste0("_", filt)))
[1] "_TPM_1_25p"
> 
> suppressPackageStartupMessages(library(rjson))
> suppressPackageStartupMessages(library(reshape2))
> suppressPackageStartupMessages(library(tximport))
> suppressPackageStartupMessages(library(GEOquery))
> suppressPackageStartupMessages(library(survey))
> suppressPackageStartupMessages(library(dplyr))
> suppressPackageStartupMessages(library(tidyr))
> suppressPackageStartupMessages(library(Biobase))
> suppressPackageStartupMessages(library(SummarizedExperiment))
> suppressPackageStartupMessages(library(MultiAssayExperiment))
> source("/home/Shared/data/seq/conquer/comparison/scripts/prepare_mae.R")
> source(paste0("/home/Shared/data/seq/conquer/comparison/scripts/apply_", demethod, ".R"))
> 
> config <- fromJSON(file = config_file)
> 
> print(config)
$mae
[1] "data/GSE45719.rds"

$subfile
[1] "subsets/GSE45719_subsets.rds"

$resfilebase
[1] "results/GSE45719"

$figfilebase
[1] "figures/diffexpression/GSE45719"

$groupid
[1] "source_name_ch1"

$keepgroups
[1] "16-cell stage blastomere"                       
[2] "Mid blastocyst cell (92-94h post-fertilization)"

$seed
[1] 42

$sizes
[1] 50 30 24 12

$nreps
[1] 1 3 3 3

> 
> mae <- readRDS(config$mae)
> groupid <- config$groupid
> mae <- clean_mae(mae = mae, groupid = groupid)
> 
> subsets <- readRDS(config$subfile)
> keep_samples <- subsets$keep_samples
> imposed_condition <- subsets$out_condition
> 
> res <- list()
> 
> sizes <- names(keep_samples)
> for (sz in sizes) {
+   for (i in 1:nrow(keep_samples[[as.character(sz)]])) {
+     message(sz, ".", i)
+     L <- subset_mae(mae, keep_samples, sz, i, imposed_condition, filt)
+     pdf(paste0(config$figfilebase, "_", demethod, exts, "_", sz, "_", i, ".pdf"))
+     res[[paste0(demethod, exts, ".", sz, ".", i)]] <- get(paste0("run_", demethod))(L)
+     dev.off()
+   }
+ }
50.1
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 1387 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11513 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 1611, 14% 
LFC < 0 (down)   : 3397, 30% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

30.1
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 1248 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11313 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 1161, 10% 
LFC < 0 (down)   : 2526, 22% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

30.2
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 1285 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11496 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 1209, 11% 
LFC < 0 (down)   : 2550, 22% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

30.3
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 1374 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11564 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 1262, 11% 
LFC < 0 (down)   : 2649, 23% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

24.1
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 1491 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11306 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 996, 8.8% 
LFC < 0 (down)   : 1905, 17% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

24.2
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 1474 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11500 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 1039, 9% 
LFC < 0 (down)   : 2103, 18% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

24.3
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 385 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11396 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 1187, 10% 
LFC < 0 (down)   : 2250, 20% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

12.1
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 1000 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11576 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 819, 7.1% 
LFC < 0 (down)   : 1445, 12% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

12.2
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 1990 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11322 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 523, 4.6% 
LFC < 0 (down)   : 986, 8.7% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

12.3
DESeq2
converting counts to integer mode
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
-- note: fitType='parametric', but the dispersion trend was not well captured by the
   function: y = a/x + b, and a local regression fit was automatically substituted.
   specify fitType='local' or 'mean' to avoid this message next time.
final dispersion estimates
fitting model and testing
-- replacing outliers and refitting for 950 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
estimating dispersions
fitting model and testing

out of 11365 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)     : 728, 6.4% 
LFC < 0 (down)   : 1176, 10% 
outliers [1]     : 0, 0% 
low counts [2]   : 0, 0% 
(mean count < 0)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results

> 
> saveRDS(res, file = paste0(config$resfilebase, "_", demethod, exts, ".rds"))
> 
> proc.time()
   user  system elapsed 
903.010  15.197 920.307 
