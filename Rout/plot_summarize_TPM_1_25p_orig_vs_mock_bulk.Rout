
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> datasets <- strsplit(datasets, ",")[[1]]
> names(datasets) <- datasets
> 
> print(datasets)
  EGEUV1 
"EGEUV1" 
> print(filt)
[1] "TPM_1_25p"
> print(dtpext)
[1] "_bulk"
> 
> source("/home/Shared/data/seq/conquer/comparison/scripts/plot_setup.R")
Warning message:
package 'ggplot2' was built under R version 3.3.2 
> 
> if (filt == "") { 
+   exts <- filt
+ } else {
+   exts <- paste0("_", filt)
+ }
> names(cols) <- paste0(names(cols), exts)
> 
> ttest <- function(x, y) {
+   tryCatch({
+     t.test(y[x == "original"], y[x == "mock"], var.equal = FALSE)$stat
+   }, error = function(e) NA)
+ }
> 
> conc_orig_list <- lapply(datasets, function(ds) {
+   readRDS(paste0("figures/consistency/", ds, exts, "_consistency_summary_data.rds"))
+ })
> conc_pairwise_orig <- do.call(rbind, lapply(conc_orig_list, function(x) x$concordance_pairwise_auc))
> conc_pairwise_orig$tp <- "original"
> conc_mock_list <- lapply(datasets, function(ds) {
+   readRDS(paste0("figures/consistency/", ds, "mock", exts, "_consistency_summary_data.rds"))
+ })
> conc_pairwise_mock <- do.call(rbind, lapply(conc_mock_list, function(x) x$concordance_pairwise_auc))
> conc_pairwise_mock$tp <- "mock"
> conc_pairwise_mock$dataset <- gsub("mock$", "", conc_pairwise_mock$dataset)
> conc_pairwise <- rbind(conc_pairwise_orig, conc_pairwise_mock)
> 
> summary_data_list <- lapply(datasets, function(ds) {
+   readRDS(paste0("figures/orig_vs_mock/", ds, exts, "_orig_vs_mock_summary_data.rds"))
+ })
> jaccm0.05 <- do.call(rbind, lapply(summary_data_list, function(x) x$jaccard_adjp0.05))
> jaccm0.1 <- do.call(rbind, lapply(summary_data_list, function(x) x$jaccard_adjp0.1))
> jaccm0.2 <- do.call(rbind, lapply(summary_data_list, function(x) x$jaccard_adjp0.2))
> spearm <- do.call(rbind, lapply(summary_data_list, function(x) x$spearman))
> 
> pdf(paste0("figures/summary_crossds/summary_orig_vs_mock", exts, dtpext, ".pdf"), 
+     width = 10, height = 7)
> 
> ## T-statistic of Spearman correlations and Jaccard coefficients between original and mock
> nbr_keep <- unique(intersect(subset(jaccm0.05, tp == "original")$nbr_samples1,
+                              subset(jaccm0.05, tp == "mock")$nbr_samples1))
> ## Remove extension from method name
> conc_pairwise$method <- gsub(exts, "", conc_pairwise$method)
> spearm$method1 <- gsub(exts, "", spearm$method1)
> jaccm0.05$method1 <- gsub(exts, "", jaccm0.05$method1)
> jaccm0.1$method1 <- gsub(exts, "", jaccm0.1$method1)
> jaccm0.2$method1 <- gsub(exts, "", jaccm0.2$method1)
> spearm$method2 <- gsub(exts, "", spearm$method2)
> jaccm0.05$method2 <- gsub(exts, "", jaccm0.05$method2)
> jaccm0.1$method2 <- gsub(exts, "", jaccm0.1$method2)
> jaccm0.2$method2 <- gsub(exts, "", jaccm0.2$method2)
> 
> print(conc_pairwise %>% as.data.frame() %>%
+         dplyr::filter(ncells1 %in% nbr_keep & ncells2 %in% nbr_keep) %>%
+         dplyr::filter(ncells1 == ncells2) %>%
+         dplyr::group_by(dataset, ncells1, method) %>% 
+         dplyr::summarize(tstat = ttest(tp, auc1)) %>% 
+         ggplot(aes(x = method, y = tstat, col = method)) + 
+         geom_boxplot(outlier.size = -1) +
+         geom_point(position = position_jitter(width = 0.2), aes(shape = dataset)) +
+         theme_bw() + xlab("") + ylab("t-statistic, area under concordance curve (original - mock)") + 
+         scale_color_manual(values = structure(cols, names = gsub(exts, "", names(cols))), name = "") + 
+         scale_shape_discrete(name = "") +
+         theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12),
+               axis.text.y = element_text(size = 12),
+               axis.title.y = element_text(size = 13)))
> 
> print(spearm %>% dplyr::filter(nbr_samples1 %in% nbr_keep & nbr_samples2 %in% nbr_keep) %>%
+         dplyr::filter(nbr_samples1 == nbr_samples2) %>%
+         dplyr::group_by(dataset, nbr_samples1, method1) %>% 
+         dplyr::summarize(tstat = ttest(tp, value)) %>% 
+         ggplot(aes(x = method1, y = tstat, col = method1)) + 
+         geom_boxplot(outlier.size = -1) +
+         geom_point(position = position_jitter(width = 0.2), aes(shape = dataset)) +
+         theme_bw() + xlab("") + ylab("t-statistic, Spearman correlation (original - mock)") + 
+         scale_color_manual(values = structure(cols, names = gsub(exts, "", names(cols))), name = "") + 
+         scale_shape_discrete(name = "") + 
+         theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12),
+               axis.text.y = element_text(size = 12),
+               axis.title.y = element_text(size = 13)))
> 
> print(jaccm0.05 %>% dplyr::filter(nbr_samples1 %in% nbr_keep & nbr_samples2 %in% nbr_keep) %>%
+         dplyr::filter(nbr_samples1 == nbr_samples2) %>%
+         dplyr::group_by(dataset, nbr_samples1, method1) %>% 
+         dplyr::summarize(tstat = ttest(tp, value)) %>%
+         ggplot(aes(x = method1, y = tstat, col = method1)) + 
+         geom_boxplot(outlier.size = -1) +
+         geom_point(position = position_jitter(width = 0.2), aes(shape = dataset)) +
+         theme_bw() + xlab("") + ylab("t-statistic, Jaccard index, adjp = 0.05 (original - mock)") + 
+         scale_color_manual(values = structure(cols, names = gsub(exts, "", names(cols))), name = "") + 
+         scale_shape_discrete(name = "") +
+         theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12),
+               axis.text.y = element_text(size = 12),
+               axis.title.y = element_text(size = 13)))
>       
> print(jaccm0.1 %>% dplyr::filter(nbr_samples1 %in% nbr_keep & nbr_samples2 %in% nbr_keep) %>%
+         dplyr::filter(nbr_samples1 == nbr_samples2) %>%
+         dplyr::group_by(dataset, nbr_samples1, method1) %>% 
+         dplyr::summarize(tstat = ttest(tp, value)) %>%
+         ggplot(aes(x = method1, y = tstat, col = method1)) + 
+         geom_boxplot(outlier.size = -1) +
+         geom_point(position = position_jitter(width = 0.2), aes(shape = dataset)) +
+         theme_bw() + xlab("") + ylab("t-statistic, Jaccard index, adjp = 0.1 (original - mock)") + 
+         scale_color_manual(values = structure(cols, names = gsub(exts, "", names(cols))), name = "") + 
+         scale_shape_discrete(name = "") +
+         theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12),
+               axis.text.y = element_text(size = 12),
+               axis.title.y = element_text(size = 13)))
> 
> print(jaccm0.2 %>% dplyr::filter(nbr_samples1 %in% nbr_keep & nbr_samples2 %in% nbr_keep) %>%
+         dplyr::filter(nbr_samples1 == nbr_samples2) %>%
+         dplyr::group_by(dataset, nbr_samples1, method1) %>% 
+         dplyr::summarize(tstat = ttest(tp, value)) %>%
+         ggplot(aes(x = method1, y = tstat, col = method1)) + 
+         geom_boxplot(outlier.size = -1) +
+         geom_point(position = position_jitter(width = 0.2), aes(shape = dataset)) +
+         theme_bw() + xlab("") + ylab("t-statistic, Jaccard index, adjp = 0.2 (original - mock)") + 
+         scale_color_manual(values = structure(cols, names = gsub(exts, "", names(cols))), name = "") + 
+         scale_shape_discrete(name = "") +
+         theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 12),
+               axis.text.y = element_text(size = 12),
+               axis.title.y = element_text(size = 13)))
> 
> dev.off()
null device 
          1 
> 
> saveRDS(NULL, paste0("figures/summary_crossds/summary_orig_vs_mock", exts, dtpext, ".rds"))
> 
> sessionInfo()
R version 3.3.1 (2016-06-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

locale:
 [1] LC_CTYPE=C                 LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
 [1] grid      stats4    parallel  stats     graphics  grDevices utils    
 [8] datasets  methods   base     

other attached packages:
 [1] scatterplot3d_0.3-38       RColorBrewer_1.1-2        
 [3] ggbiplot_0.55              scales_0.4.1              
 [5] plyr_1.8.4                 lazyeval_0.2.0            
 [7] UpSetR_1.3.2               akima_0.6-2               
 [9] MultiAssayExperiment_1.0.0 SummarizedExperiment_1.4.0
[11] GenomicRanges_1.26.2       GenomeInfoDb_1.10.3       
[13] IRanges_2.8.1              S4Vectors_0.12.1          
[15] Biobase_2.34.0             BiocGenerics_0.20.0       
[17] rjson_0.2.15               reshape2_1.4.2            
[19] iCOBRA_1.2.0               tidyr_0.6.1               
[21] dplyr_0.5.0                ggrepel_0.6.5             
[23] ggplot2_2.2.1              pheatmap_1.0.8            

loaded via a namespace (and not attached):
 [1] gtools_3.5.0         lattice_0.20-34      colorspace_1.3-2    
 [4] htmltools_0.3.5      DBI_0.5-1            sp_1.2-4            
 [7] stringr_1.1.0        zlibbioc_1.20.0      munsell_0.4.3       
[10] gtable_0.2.0         caTools_1.17.1       htmlwidgets_0.8     
[13] labeling_0.3         httpuv_1.3.3         Rcpp_0.12.9         
[16] KernSmooth_2.23-15   xtable_1.8-2         ROCR_1.0-7          
[19] DT_0.2               gdata_2.17.0         limma_3.30.8        
[22] XVector_0.14.0       mime_0.5             gplots_3.0.1        
[25] gridExtra_2.2.1      digest_0.6.12        stringi_1.1.2       
[28] shiny_1.0.0          tools_3.3.1          bitops_1.0-6        
[31] magrittr_1.5         RCurl_1.95-4.8       tibble_1.2          
[34] Matrix_1.2-8         shinyBS_0.61         shinydashboard_0.5.3
[37] assertthat_0.1       R6_2.2.0            
> 
> 
> proc.time()
   user  system elapsed 
 17.377   0.679  19.129 
