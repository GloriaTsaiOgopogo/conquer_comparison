
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(config_file)
[1] "config/GSE74596sim123mock.json"
> 
> suppressPackageStartupMessages(library(rjson))
> suppressPackageStartupMessages(library(Biobase))
> suppressPackageStartupMessages(library(SummarizedExperiment))
> suppressPackageStartupMessages(library(MultiAssayExperiment))
> suppressPackageStartupMessages(library(survey))
> 
> config <- fromJSON(file = config_file)
> 
> print(config)
$mae
[1] "data/GSE74596sim123mock.rds"

$subfile
[1] "subsets/GSE74596sim123mock_subsets.rds"

$resfilebase
[1] "results/GSE74596sim123mock"

$figfilebase
[1] "figures/diffexpression/GSE74596sim123mock"

$groupid
[1] "group"

$keepgroups
[1] "Single_cell_RNA-seq_NKT0"

$seed
[1] 42

$sizes
[1] 22 12  6

$nreps
[1] 1 5 5

> 
> mae <- readRDS(config$mae)
> pdata <- Biobase::pData(mae)
> 
> groupid <- config$groupid
> keepgroups <- config$keepgroups
> sizes <- config$sizes
> nreps <- config$nreps
> 
> if (length(groupid) > 1) {
+   pdata[, paste(groupid, collapse = ".")] <- 
+     as.character(interaction(as.data.frame(pdata[, groupid])))
+   groupid <- paste(groupid, collapse = ".")
+ }
> 
> ## Keep only two groups
> if (is.null(keepgroups)) 
+   keepgroups <- levels(factor(pdata[, groupid]))[1:2]
> keepsamples <- rownames(pdata[pdata[, groupid] %in% keepgroups, , drop = FALSE])
> pdata <- droplevels(pdata[match(keepsamples, rownames(pdata)), , drop = FALSE])
> 
> condt <- as.character(pdata[, groupid])
> names(condt) <- rownames(pdata)
> 
> ngroups <- nlevels(factor(condt))
> message("Considering the following ", ngroups, ifelse(ngroups == 1, " group: ", " groups: "), 
+         paste(levels(factor(condt)), collapse = " vs "))
Considering the following 1 group: Single_cell_RNA-seq_NKT0
> 
> names(sizes) <- sizes
> names(nreps) <- sizes
> set.seed(config$seed)
> 
> ## Subset the data set to the largest sample size, to make sure that all 
> ## smaller data sets are indeed subsets of the largest data set.
> if (length(unique(condt)) == 1) {
+   condt <- condt[sort(sample(1:length(condt), 2 * max(sizes)))]
+ } else {
+   condt <- condt[sort(stratsample(as.character(condt), 
+                                   structure(rep(max(sizes), 2), 
+                                             names = levels(factor(condt)))))]
+ }
> 
> keep_tmp <- lapply(sizes, function(sz) {
+   unique(t(sapply(1:nreps[as.character(sz)], function(i) {
+     if (length(unique(condt)) == 1) {
+       tmpn <- names(condt)
+       condt2 <- paste0(condt, ".", sample(rep(c("1", "2"), ceiling(length(condt)/2)))[1:length(condt)])
+       names(condt2) <- tmpn
+       ngroups <- 2
+     } else {
+       condt2 <- condt
+     }
+     smp <- names(condt2)[sort(stratsample(as.character(condt2), 
+                                           structure(rep(sz, ngroups), 
+                                                     names = levels(factor(condt2)))))]
+     cdt <- condt2[smp]
+     paste(smp, cdt, sep = "___")
+   })))
+ })
> 
> keep_samples <- lapply(keep_tmp, function(w) {
+   rbind(apply(w, 2, function(s) sapply(strsplit(s, "___"), .subset, 1)))})
> out_condition <- lapply(keep_tmp, function(w) {
+   rbind(apply(w, 2, function(s) sapply(strsplit(s, "___"), .subset, 2)))})
> 
> saveRDS(list(keep_samples = keep_samples, out_condition = out_condition), 
+         file = config$subfile)
> 
> sessionInfo()
R version 3.3.1 (2016-06-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

locale:
 [1] LC_CTYPE=C                 LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
 [1] grid      stats4    parallel  stats     graphics  grDevices utils    
 [8] datasets  methods   base     

other attached packages:
 [1] survey_3.31-5              survival_2.40-1           
 [3] Matrix_1.2-8               MultiAssayExperiment_1.0.1
 [5] SummarizedExperiment_1.4.0 GenomicRanges_1.26.2      
 [7] GenomeInfoDb_1.10.3        IRanges_2.8.1             
 [9] S4Vectors_0.12.1           Biobase_2.34.0            
[11] BiocGenerics_0.20.0        rjson_0.2.15              

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.9          XVector_0.14.0       splines_3.3.1       
 [4] zlibbioc_1.20.0      xtable_1.8-2         lattice_0.20-34     
 [7] R6_2.2.0             tools_3.3.1          shinydashboard_0.5.3
[10] htmltools_0.3.5      digest_0.6.12        shiny_1.0.0         
[13] bitops_1.0-6         RCurl_1.95-4.8       mime_0.5            
[16] httpuv_1.3.3        
> 
> proc.time()
   user  system elapsed 
  8.033   0.604   8.704 
